export const name = "Froilan Zarate Jr";
export const fullName = "Froilan Danganan Zarate Jr";
export const email = "zarate_rj@yahoo.com";
export const phone = "+1 (408) 600-9717";
export const locations = ["Milpitas, CA", "Vallejo, CA"];

export const links = {
    github: "https://github.com/rjzarate",
    linkedin: "https://www.linkedin.com/in/froilan-zarate-jr-computer-scientist/",
    email: "mailto:" + email,
};

export const images = {
    profile: "/img/profile.jpeg",
    profile1: "/img/profile1.jpg",
    hobbiesDND: "/img/hobbies/dnd.jpg",
    hobbiesOutside: "/img/hobbies/outside.jpg",
    hobbiesPoker: "/img/hobbies/poker.jpg",
    hobbiesCosplay: "/img/hobbies/cosplay.jpg",
};

/**
 * List of projects -
 * soulace
 * bug tracker
 */

export const projects = [
    {
        id: "portfolio-website",
        title: "Portfolio Website",
        shortDescription: "My portfolio website built with Next.js and Tailwind CSS",
        description:
            "A responsive portfolio website built with Next.js and Tailwind CSS to showcase my work and skills.",
        image: "/img/projects/portfolio-website/main.png",
        technologies: ["React", "Next.js", "Tailwind CSS", "TypeScript", "v0", "GitHub"],
        demoUrl: "https://example.com",
        githubUrl: "https://github.com/rjzarate/website-portfolio",
        category: "Web Development",
        duration: "1 week (Jul. 2025)",
        teamSize: "Solo project",
        challenges: ["User-friendliness & styling", "Clean code design patterns", "Project descriptions"],
        detailedDescription:
            "My second personal website designed as a portfolio to showcase my skills and projects. Used Vercel's v0 to develop the base of the website, and integrated some of my own styling and components. I wanted to create this portfolio in a short amount of time so I can use it to apply for jobs; thus, I've decided to implement everything in React rather than following a 3-tier architecture design pattern â€” though you can see many of my semester-long school projects use this pattern.",
        problemStatement:
            "There's only so much a resume can show and many job applications have an entry to upload your website. Additionally, I need a better way to create a \"brand\" for myself and a better way to display what I've worked on.",
        solution:
            "So, why not only create a website that displays who I am and what I've done, but also learn more about React! Many website generators like Wix and Squarespace exist, but they don't provide the flexibility and learning experience that building from scratch does.",
        features: [
            "Project search",
            "Page navigation",
            "Side navigation",
            "Dark mode",
            "Mobile view",
            "Adaptive projects",
        ],
        featureDescriptions: [
            "Search for projects by title, description, or technology.",
            "Navigate through different sections of the portfolio easily.",
            "A side navigation bar that adapts to the current section.",
            "Dark mode toggle for better user experience.",
            "Mobile view for accessibility on smaller screens.",
            "Displayed as sections, projects are easily customizable.",
        ],
        gallery: [
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
        ],
        results: [
            "I now have a portfolio ðŸ˜Ž",
            "Compared to my resume, increased my project descriptions by over 200%",
            "Added 5+ images to each project compared to LinkedIn and other Job Boards",
        ],
        lessonsLearned:
            "Having a good portfolio is really important, as it's YOUR way of showing how you want others to see yourself. With a good portfolio, it is possible to include everything that you've done without making it overwhelming by having features like \"Featured Projects\" and a search bar.",
        contributions: undefined,
    },
    {
        id: "banking-application",
        title: "Banking Application",
        shortDescription: "A web-based banking application for Google users",
        description:
            "Software Engineering course final project. Designed with the 3-tier architecture software design pattern.",
        detailedDescription:
            "This full-stack web banking application was the final project for my Software Engineering course. The project followed the 3-tier architecture model, separating concerns between the presentation layer (React/Next.js frontend), the logic layer (Flask API), and the data layer (MySQL database). We used Docker to ensure a consistent development. The application allows users to log in using Google OAuth, view their balance and transaction history, make payments via an automatic billing system, and upload checks for processing. Admin users have access to a custom dashboard for user monitoring and management. Throughout the development process, we coordinated using Agile methodologies, conducting weekly sprints and stand-ups to track progress.",
        image: "/img/projects/banking-application/main.png",
        technologies: [
            "React",
            "Flask",
            "MySQL",
            "Docker",
            "Next.js",
            "Agile",
            "Scrum Meetings",
            "Google OAuth",
            "TypeScript",
            "Python",
            "Tailwind CSS",
            "v0",
            "Database",
            "GitHub",
        ],
        demoUrl: "https://youtu.be/5uQTpoYigDU",
        githubUrl: "https://github.com/Jjmaxxx/onlinebanking",
        category: "Full-Stack",
        duration: "4 months (Feb. 2025 â€“ May 2025)",
        teamSize: "4 developers",
        challenges: ["Small team size", "Work delegation", "API calls"],
        problemStatement:
            "A new online-only bank is being launched and it requires a web-based application server, mobile application, and seamless integration to handle all the banking transactions and financial planning tools.",
        solution: undefined,
        solutions: [
            "Support opening, closing, and transferring accounts, as well as cash deposits and withdrawals via both online platform and physical ATMs of other banks.",
            "Enable mobile check deposits through image capture and ensure a user-friendly interface accessible to all age demographics.",
            "Allow users to create accounts using a valid email and password, and manage savings, checking, deposits, and other financial tools.",
            "Integrate a Chase ATM locator with map support and redirection to external mapping services such as Apple Maps and Google Maps.",
            "Automate bill payments, fund transfers, balance updates, fraud alerts, and generation of scheduled financial reports.",
            "Implement a manager dashboard for monitoring fraud, generating reports, ensuring compliance, and enabling admins to query customer accounts and activities.",
            "Use Flask for the backend, ReactJS for a cross-platform frontend, integrate Google Maps, generate sample data for demo, and collaborate through GitHub with version control and team contributions.",
        ],
        features: [
            "Google OAuth login",
            "Automatic billing",
            "Admin dashboard",
            "ATM API",
            "Chase ATM locator",
            "Check upload",
        ],
        featureDescriptions: [
            "Login using Google OAuth for secure authentication.",
            "Automatic billing system for recurring payments.",
            "Admin dashboard for managing users and transactions.",
            "ATM API integration for real-time ATM data.",
            "Chase ATM locator for finding nearby ATMs.",
            "Users can upload a check and the server can check for validity and amount.",
        ],
        gallery: [
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
        ],
        results: [
            "Easy user login by using a Google account",
            "1 line installation; lightweight and fast compared to other groups",
            "97% grade on Final Project; finished in time when all other groups had 6 members",
        ],
        lessonsLearned: undefined,
        contributions: [
            "User logout and user authentication",
            "Created working Docker containers for the frontend, backend, and database",
            "Developed the backend for the Admin dashboard",
        ],
    },
    {
        id: "ai-battles",
        title: "AI Battles",
        shortDescription: "A prompt-based fantasy game using Flask and Google Gemini",
        description:
            "Advanced Programming with Python Final Project. Input a unique repsonse to defeat AI generated enemies.",
        detailedDescription:
            "This project was created use Python Flask as the frontend and backend, and uses Google Gemini to control the enemy generation in addition to win and lose condition. This project was created in essentially one day, (you can view the commit history on GitHub), but was able to be unique and complex enough to get a 100% in the project ðŸ˜Ž. When creating this project, I followed as closely to the 3-tier architecture design pattern, with having 3 scripts: application.py (frontend), director.py (backend), and the ai.py (generator). I am honestly really proud on how fast I coded the entire project, but do wish I could have expanded more on it.",
        image: "/img/projects/ai-battles/main.png",
        technologies: ["Flask", "Python", "Google Gemini", "AI"],
        demoUrl: undefined,
        githubUrl: "https://github.com/rjzarate/Python-Game",
        category: "AI Integration",
        duration: "2 days (Dec. 2024)",
        teamSize: "2 developers",
        challenges: ["AI token limits", "AI prompts"],
        problemStatement: undefined,
        solution: undefined,
        solutions: undefined,
        features: ["AI integration", "Unique enemies", "Limitless solves"],
        featureDescriptions: [
            "Uses AI to control many features of the gameplay.",
            "Fight different fantasy-generated enemies that get harder as time goes on.",
            "Use your imagination to defeat your enemies.",
        ],
        gallery: [
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
        ],
        results: ["100% grade on Final Project"],
        lessonsLearned:
            "This gave me and my partner a better understanding on how we should structure our prompts when using AI. A lot of the times, it would give a giant response or would use too many tokens to the point you can only fight one enemy before having to wait until we get more tokens. There has to be a balance between giving just enough to the AI and making sure that the AI gives the proper response.",
        contributions: undefined,
    },
    {
        id: "3d-shader-sceneviewer",
        title: "3D Shader Sceneviewer",
        shortDescription: "A sceneviewer created with C++ openFrameworks that can export rendered images and obj files",
        description: "Introduction to Computer Graphics course final project.",
        detailedDescription:
            "This project was created using C++ openFrameworks, and was a culmination of many of the labs and smaller projects I've done during that class. I wanted to combine many of the features that the labs and projects had, with the addition of having the ability to export the entire scene into a .obj file. So, I merged and refactored a lot of the code to make everything work into one project. Additionally, I had to research how .obj and .mtl files work, as these are both separate files but connect with each other to render the .obj file's material, diffuse, normals, specular, and ambient occlusion.",
        image: "/img/projects/3d-shader-sceneviewer/main.png",
        technologies: ["C++", "openFrameworks", "Computer Graphics", "Lighting", "Shading", "obj"],
        demoUrl: "https://youtu.be/if9lEYg0YGY",
        githubUrl:
            "https://github.com/rjzarate/school-projects/tree/main/school_classes/cs134/of_v0.12.0_osx_release/apps/myApps/project_3_planar_textures",
        category: "3D Graphics",
        duration: "3 months (Oct. 2024 â€“ Dec. 2024)",
        teamSize: "Solo project",
        challenges: ["Shader algorithms", "Objects to .obj"],
        problemStatement:
            'The current project can only export rendered images, but cannot be used into a "real" 3D editor to modify.',
        solution: "Have a way to export the entire scene as a .obj file so that it can be uploaded to a 3D editor.",
        solutions: undefined,
        features: ["3D sceneviewer", "Render images with shading", "Export to obj"],
        featureDescriptions: [
            "Can interact with the objects and move them in the scene",
            "Can render the scene with the given lighting and textures.",
            "Can export the entire scene as a .obj, .mtl, and it's corresponding texture files.",
        ],
        gallery: [
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
        ],
        results: ["Professor enjoyed my presentation ðŸ˜Ž", "100% grade on Final Project"],
        lessonsLearned:
            "This project gave me a great understanding on how .obj files work, as I basically had to write the entire .obj file and .mtl file myself.",
        contributions: undefined,
    },
    {
        id: "cinket",
        title: "Cinket",
        shortDescription: "My D&D website for my players / Password: Limitless",
        description: "Contains everything needed for my players to understand my world and create their characters.",
        detailedDescription:
            "In July 2024, I got into being a Dungeon Master for D&D and started creating my world: Cinket. Instead of keeping all of my notes and idea on a Google Document, I decided to use a note-taking application called Obsidian. What made me able to host my first D&D session on August 2024 was being able to upload all of my notes into a working website! All of my players are able to use this website and can reference it when creating their characters or have questions about the world of Cinket. I eventually kept expanding myh Obsidian notes, which inturn expanded my website to essentially be a D&D 5.5e wiki. I've decided to add password authentication for distribution purposes, but currently, the password is: Limitless.",
        image: "/img/projects/cinket/main.png",
        technologies: ["JavaScript", "Markdown", "Obsidian", "Dataview", "Digital Garden", "GitHub"],
        demoUrl: "https://cinket.com/",
        githubUrl: undefined,
        category: "Full-Stack",
        duration: "6+ Months (Aug. 2024 â€“ Current)",
        teamSize: "1 developer",
        challenges: ["Limited API", "Page organization", "API calls"],
        problemStatement: "My players needed a better way to access a lot of homebrew and lore in the world of Cinket.",
        solution: undefined,
        solutions: undefined,
        features: ["Password authentication", "Search bar", "Side navigation", "Dataview tables", "Markdown to HTML"],
        featureDescriptions: [
            "Uses Octauthent for password authentication to limit users and protect data.",
            "Advanced search bar that can search within the pages.",
            "Collapsing folder structure and pages.",
            "Uses JavaScript and Dataview to display spells and tables.",
            "Converts Obsidian's Markdown to HTML, allowing for easy editing and hyperlinking.",
        ],
        gallery: [
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
        ],
        results: [
            "My 10+ players use this instead of other D&D wikis",
            "Used in ALL of my sessions during Dungeon Mastering",
            "50,000+ words of months of ongoing development on the world and game mechanics.",
        ],
        lessonsLearned:
            "Since I am using an Obsidian extension to convert the md files to HTML, it's very limited compared to building a website from Next.js and other React frameworks.",
        contributions: undefined,
    },
    {
        id: "sharesphere-application",
        title: "ShareSphere Application",
        shortDescription: "A web-based application for hobbists to share and keep track of items",
        description:
            "Introduction to Database Management Systems course final project. Designed with the 3-tier architecture software design pattern.",
        detailedDescription: "",
        image: "/img/projects/sharesphere-application/main.png",
        technologies: ["React", "MySQL", "Docker", "Node.js", "JavaScript", "JSON", "Database", "GitHub"],
        demoUrl: "https://youtu.be/9IalyFeNDjM",
        githubUrl: undefined,
        category: "Full-Stack",
        duration: "2 months (Apr. 2024 â€“ May 2024)",
        teamSize: "5 developers",
        challenges: ["Learning web development", "Work delegation", "API calls"],
        detailedDescription:
            "This project aims to develop a web application that facilitates item sharing among hobbyists within local groups. The app will allow users to create personal libraries of their collectible items like books, puzzles, and board games. Members of the same group can view each other's libraries and request to borrow desired items, eliminating the need to purchase duplicates. This project was my first time learning JavaScript, React, and Docker. I spent a lot of time learning these applications, which although I could not contribute as much as I wish I could have, I did learn a lot from this project.",
        problemStatement:
            "Hobbists and local groups are having trouble sharing and allocating their collectible items like books, puzzles, and board games.",
        solution: undefined,
        solutions: [
            "The core features include a member library view displaying the user's personal collections; a group member view listing individuals in each of the user's groups; and an integrated calendar for tracking events as well as deadlines for returning borrowed items. Users will be able to register accounts and log in to access the app's functionalities.",
            "Central to the application is the ability for group members to send borrow requests to each other for specific items in their libraries. Users can create and attend events, which are associated with particular groups. Crucial to enabling library sharing is a privacy control mechanism allowing users to selectively share entire libraries or individual items with each of their groups.",
            'The app will incorporate a search function to locate available and borrowable items within a group\'s pooled collections. Potential additional features include gifting items between users, duplicating existing item entries, creating "friends" lists to view multiple libraries, reminder notifications, and user blocking options.',
            "From a non-functional perspective, the app will prioritize security through email/OAuth authentication and anti-spam measures, as well as portable responsive design for the web. Accessibility standards will be followed, along with optimizations for reasonable performance and load times.",
        ],
        features: ["Database security", "Library privacy control", "Calendar integration"],
        featureDescriptions: [
            "SQL injection protection implementation.",
            "Make and browse libraries; privacy settings to make them public or private.",
            "Create and view events within your different groups and libraries.",
        ],
        gallery: [
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
        ],
        results: ["Working connection between database, backend, and frontend", "87% Final Project grade"],
        lessonsLearned: undefined,
        contributions: ["User & group page", "SQL mock data & testing"],
    },
    {
        id: "k4t",
        title: "K4T",
        shortDescription: "A Unity2D game where a cat must defeat bosses to save the world!",
        description: "Game Development Club project. Uses only one button for all the controls; works on mobile.",
        image: "/img/projects/k4t/main.png",
        technologies: ["Unity", "C#", , "GitHub Workflow", "Producer", "Project Management", "Animation", "GitHub"],
        demoUrl: "https://froilan-zarate.itch.io/k4t",
        githubUrl: "github.com/rjzarate/k4t/",
        category: "Game Development",
        duration: "4 months (Feb. 2024 â€“ May 2024)",
        teamSize: "9 programmers, 5 artists, 4 game designers",
        challenges: ["Workload delegation", "Programmer-Artist-GD communication", "Scope creep"],
        detailedDescription:
            "K4T was a game I created on Scratch in 2017, and I wanted to make it a reality and code it in game engine. I gathered many of the programmers and artists from Solace and we worked on K4T for the 2024 Spring semester. During the development process, I was the producer and lead programmer to make sure everything went smoothly. The gameplay revolves on a vertical screen where you control the cat's movements and attack with only one button; this way, we can easily make this game for mobile devices. We experienced many road blocks that hindered our progress, so our main vision couldn't be completed in one semester, but we were still able to create a functional game and upload it itch.io.",
        problemStatement: undefined,
        solution: undefined,
        features: ["1 button controls", "2 bosses", "10+ different boss attacks", "Animation, particles, music & SFX"],
        featureDescriptions: [
            "Move, shoot, and change directions with one click of the button!",
            "Fight the Meat-eor and Cheese Mouse UFO to save the Moon!",
            "Unique boss attack patterns that challenges the player's movement.",
            "Small details that make the game feel alive.",
        ],
        gallery: [
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
        ],
        results: [
            "I now made a game in my favorite game ðŸ˜Ž",
            "Connected with many old high school friends and still keep in touch",
        ],
        lessonsLearned:
            "When I pitched this project, I believed that we could do 8 bosses and 4 worlds. However, as a beginner producer and beginner game developers, it was difficult to complete many of the deadlines in time. Nonetheless, I am still happy for how the gameplay turned out and may even pick this game up to finish it.",
        contributions: undefined,
    },
    {
        id: "color-me-extension",
        title: "Color Me Extension",
        shortDescription: "An extension that changes the color of your tab bar",
        description: "Programming Paradigms course final project. Built with React",
        detailedDescription: "",
        image: "/img/projects/color-me-extension/main.png",
        technologies: ["React", "Yarn", "Extension", "JSON", "GitHub"],
        githubUrl: "https://github.com/ehcaw/colorme",
        category: "Full-Stack",
        duration: "2 months (Apr. 2024 â€“ May 2024)",
        teamSize: "2 developers",
        challenges: ["Learning React", "Browser integration"],
        detailedDescription:
            "This project uses React to create a universal web extension that can change the color of your tabs. Additionally, it can change the color depending on your theme or depending on saved websites. This project was my first time learning TypeScript and React. I spent a lot of time learning these applications, which although I could not contribute as much as I wish I could have, I did learn a lot from this project.",
        problemStatement: undefined,
        solution: undefined,
        solutions: undefined,
        features: ["Tab bar color", "Previously colors", "Website colors"],
        featureDescriptions: [
            "Change your tab bar to your desired color.",
            "Saves the five most recent colors you picked in case you want to go back to them.",
            "Have specific colors that you want for certain websites.",
        ],
        gallery: [
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
        ],
        results: ["95% Final Project grade"],
        lessonsLearned: undefined,
        contributions: ["Saved colors", "Website saving themes"],
    },
    {
        id: "catch-bobo",
        title: "Catch Bobo",
        shortDescription: "A Cat-and-Mouse multiplayer minigame within Minecraft",
        description: "A Minecraft 1.20 map with custom classes, textures, and abilities.",
        image: "/img/projects/catch-bobo/main.png",
        technologies: ["mcfunction", "Blockbench", "JSON"],
        demoUrl: "https://www.youtube.com/watch?v=YKfC8Mfxz0k",
        githubUrl: "github.com/rjzarate/Catch-Bobo/",
        category: "Game Development",
        duration: "7 months (Aug. 2022 â€“ Feb. 2023)",
        teamSize: "1 developer (Me), 2 artists, 5+ builders",
        challenges: ["Multiplayer integration", "3D modeling", 'Making it "fun"', "Scope creep"],
        detailedDescription:
            "This is my biggest Minecraft project that involved a lot of designing and problem solving due to mcfunction's limited logic capabilities. I worked on this projects with a few of my high school friends. Funny enough, the game \"Catch Bobo \" was one of my friend's Minecraft minigame they made in middle school, and I wanted to make it a full-fledged game with custom textures and coded abilities. So, my friends and I gathered together to work on this project; I would do all of the coding and game design, while my friends would work on the map and help playtest the abilities. As the project progressed, I asked another friend who knows 3D modeling to help me learn Blockbench, which is a 3D modeling software for Minecraft and other low-poly games.",
        problemStatement: undefined,
        solution: undefined,
        features: [
            "10+ custom characters",
            "50+ unique abilities",
            "25+ Custom 3D models and textures",
            "Expansive map with unique landmarks",
            "Adjustable game settings",
        ],
        featureDescriptions: [
            "Each class has their own gimmick that makes them fun to play.",
            "Different abilities that go beyond survival vanilla Minecraft.",
            "Unique 3D models and textures to make the characters feel powerful.",
            "Can easily change the game timer, ability cooldowns, and objectives.",
            "640x640 block map with different biomes and buildings.",
        ],
        gallery: [
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
        ],
        results: [
            "I now made a game in my favorite game ðŸ˜Ž",
            "Connected with many old high school friends and still keep in touch",
        ],
        lessonsLearned:
            "This is one of my longest projects that took to finish, which is mainly due to how big the map is and wanting to add more characters and textures. I'm happy with the result of this project, but also wish I spent less time working on it by having a clear goal.",
        contributions: undefined,
    },
];

/*
,
    {
        id: "task-management-app",
        title: "Task Management App",
        shortDescription: "A cross-platform mobile application",
        description: "A cross-platform mobile application for task management built with React Native and Firebase.",
        image: "/placeholder.svg?height=400&width=600",
        technologies: ["React Native", "Firebase", "Redux", "Expo"],
        demoUrl: "https://example.com",
        githubUrl: "https://github.com",
        category: "Mobile",
        duration: "4 months",
        teamSize: "2 developers",
        challenges: ["Cross-platform compatibility", "Offline functionality", "Real-time synchronization"],
        features: ["Task creation", "Team collaboration", "Push notifications", "Offline mode", "Calendar integration"],
        detailedDescription:
            "A comprehensive task management application that helps teams stay organized and productive. Features real-time collaboration, offline functionality, and seamless synchronization across devices. Built with React Native for cross-platform compatibility and Firebase for backend services.",
        gallery: [
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
        ],
        problemStatement:
            "Teams needed a reliable task management solution that worked offline and synchronized seamlessly across different devices and platforms.",
        solution:
            "Developed a cross-platform mobile application with robust offline capabilities and real-time synchronization. Implemented push notifications, team collaboration features, and calendar integration to provide a comprehensive productivity solution.",
        results: ["5000+ downloads in first month", "4.8/5 app store rating", "30% increase in team productivity"],
        lessonsLearned:
            "The complexity of handling offline data synchronization and the importance of thorough testing across different devices and network conditions.",
    },
    {
        id: "analytics-dashboard",
        title: "Analytics Dashboard",
        shortDescription: "An admin dashboard with data visualization",
        description: "An admin dashboard with data visualization, user management, and reporting features.",
        image: "/placeholder.svg?height=400&width=600",
        technologies: ["React", "D3.js", "Material UI", "Python", "FastAPI"],
        demoUrl: "https://example.com",
        githubUrl: "https://github.com",
        category: "Full Stack",
        duration: "6 months",
        teamSize: "3 developers",
        challenges: ["Large dataset visualization", "Real-time updates", "Performance optimization"],
        features: ["Interactive charts", "Real-time data", "User management", "Export functionality", "Custom reports"],
        detailedDescription:
            "A powerful analytics dashboard that processes and visualizes large datasets in real-time. Built with modern web technologies to provide insights and actionable data for business decisions. Features interactive charts, custom reporting, and comprehensive user management.",
        gallery: [
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
        ],
        problemStatement:
            "Enterprise clients needed a way to visualize and analyze large amounts of data in real-time to make informed business decisions quickly.",
        solution:
            "Built a comprehensive analytics dashboard with interactive visualizations, real-time data processing, and customizable reporting features. Optimized for performance to handle large datasets efficiently.",
        results: [
            "Reduced data analysis time by 70%",
            "Improved decision-making speed by 50%",
            "Processed 1M+ data points daily",
        ],
        lessonsLearned:
            "The importance of data optimization and caching strategies when working with large datasets, and how proper architecture can significantly impact application performance.",
    },
    {
        id: "blog-platform",
        title: "Blog Platform",
        shortDescription: "A content management system",
        description: "A blog platform with content management, user authentication, and commenting features.",
        image: "/placeholder.svg?height=400&width=600",
        technologies: ["Next.js", "PostgreSQL", "Prisma", "NextAuth"],
        demoUrl: "https://example.com",
        githubUrl: "https://github.com",
        category: "Full Stack",
        duration: "2 months",
        teamSize: "Solo project",
        challenges: ["Content management", "SEO optimization", "User authentication"],
        features: ["Rich text editor", "Comment system", "User profiles", "SEO optimization", "Social sharing"],
        detailedDescription:
            "A modern blog platform with a focus on content creation and community engagement. Features a rich text editor, commenting system, and comprehensive SEO optimization. Built with Next.js for server-side rendering and PostgreSQL for data persistence.",
        gallery: [
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
        ],
        problemStatement:
            "Content creators needed a platform that was easy to use, SEO-friendly, and provided good community engagement features without the complexity of existing solutions.",
        solution:
            "Created a streamlined blog platform with an intuitive content editor, built-in SEO optimization, and community features like comments and user profiles. Focused on simplicity and performance.",
        results: ["50+ active bloggers", "10,000+ monthly page views", "Average session duration of 4+ minutes"],
        lessonsLearned:
            "The importance of user feedback in feature development and how SEO considerations should be built into the architecture from the beginning rather than added later.",
    },
    {
        id: "weather-app",
        title: "Weather App",
        shortDescription: "A weather forecast application",
        description:
            "A weather forecast application that provides real-time weather data and forecasts for any location.",
        image: "/placeholder.svg?height=400&width=600",
        technologies: ["React", "OpenWeather API", "Styled Components", "PWA"],
        demoUrl: "https://example.com",
        githubUrl: "https://github.com",
        category: "Frontend",
        duration: "1 month",
        teamSize: "Solo project",
        challenges: ["API integration", "Geolocation", "Offline functionality"],
        features: ["Current weather", "7-day forecast", "Location search", "Offline mode", "Weather alerts"],
        detailedDescription:
            "A comprehensive weather application that provides accurate weather information and forecasts. Built as a Progressive Web App with offline capabilities and location-based services. Features beautiful visualizations and intuitive user interface.",
        gallery: [
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
        ],
        problemStatement:
            "Users needed a fast, reliable weather app that worked offline and provided accurate forecasts with a clean, easy-to-read interface.",
        solution:
            "Developed a Progressive Web App that caches weather data for offline use, provides accurate forecasts, and features an intuitive interface with beautiful weather visualizations.",
        results: ["1000+ daily active users", "4.7/5 user rating", "95% user retention rate"],
        lessonsLearned:
            "The value of Progressive Web App features and how proper caching strategies can significantly improve user experience, especially for mobile users with limited connectivity.",
    }, 
 */
